# Multiarch image, it has both Linux and Windows versions
image: mcr.microsoft.com/dotnet/sdk:8.0

stages:
  - build
  - test
  - deploy

include:
  # NuGet Dependency Scanning
  # https://docs.gitlab.com/ee/user/application_security/dependency_scanning/
  - template: Jobs/Dependency-Scanning.gitlab-ci.yml
  - local: CI/Code-Quality-dotNET.gitlab-ci.yml

# Build model
build_model:
  stage: build
  before_script:
    - dotnet --version
  script:
    - dotnet build AutomatedWarehouseSystem/AutomatedWarehouseSystem_ClassLib

# Build complete solution
build_view:
  stage: build
  image: mcr.microsoft.com/dotnet/sdk:8.0-windowsservercore-ltsc2019
  tags: [windows]
  before_script:
    - dotnet --version
  script:
    - dotnet build AutomatedWarehouseSystem/AutomatedWarehouseSystem.sln

# Test
test_model:
  stage: test
  before_script:    
    # Restore NuGet packages to the local .nuget folder (inside the project directory).
    - dotnet restore AutomatedWarehouseSystem/AutomatedWarehouseSystem_Tests --packages .nuget
  script:
    - dotnet test AutomatedWarehouseSystem/AutomatedWarehouseSystem_Tests --no-restore

# Documentation
pages:
  stage: deploy
  before_script:
    - apt-get update -yqq
    - apt-get install -yqq doxygen graphviz
  script:
    - doxygen
    - cp -r doc/html/. public/
  artifacts:
    paths:
      - public
    expire_in: 1 day
  only:
    - master
